---
- name: Install Samba packages
  ansible.builtin.package:
    name: "{{ samba_server_packages }}"
    state: present

- name: Start smb.conf from scratch
  ansible.builtin.copy:
    dest: /etc/samba/smb.conf
    content: "{{ samba_server_empty_conf_header | comment }}"
    owner: root
    mode: '0444'
  when: samba_server_empty_conf | bool
  notify:
    - restart samba services
  tags: crap

- name: Generate smb.conf
  community.general.ini_file:
    path: /etc/samba/smb.conf
    section: "{{ item.0.section }}"
    option: "{{ item.1.option }}"
    value: "{{ item.1.value }}"
    owner: root
    mode: '0444'
  loop: "{{ query('subelements', samba_server_smb_conf, 'options') }}"
  notify:
    - restart samba services
  tags: crap

- name: Create Samba users if they don't exist yet
  ansible.builtin.shell: >
    set -o nounset -o pipefail -o errexit &&
    (pdbedit --user={{ item.name }} 2>&1 > /dev/null) \
    || (echo {{ item.password }}; echo {{ item.password }}) \
    | smbpasswd -s -a {{ item.name }}
  args:
    executable: /bin/bash
  loop: "{{ samba_server_users }}"
  no_log: true
  register: __create_user
  changed_when: "'Added user' in __create_user.stdout"

- name: Enable and start samba services
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ samba_server_services }}"
  when: samba_server_enable | bool
